
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@2.0.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-deploy-backend:
   
    docker:
      - image: cimg/node:16.10
    steps:
      # Checkout the code as the first step.
      - checkout
      - aws-cli/setup
      - eb/setup
      - run:
        name: Go to backend directory
        command: cd udagram-api
      
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm

      - run:
          name: Deploy
          command: |
            npm run build
            npm run deploy

  build-deploy-frontend:
   
    docker:
      - image: cimg/node:16.10
    steps:
      # Checkout the code as the first step.
      - run:
        name: Go to frontend directory
        command: cd ../udagram-frontend

      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm

      - run:
          name: Deploy
          command: |
            npm run build
            npm run deploy
workflows:
  
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - build-deploy-backend
      - build-deploy-frontend